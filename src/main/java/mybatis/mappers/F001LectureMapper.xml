<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="mapper.f001Lecture">	
 	<resultMap type="F001LectureVO" id="f001Lecture">
 		<result property="subId" column="subId"/>
 		<result property="codeName" column="codeName"/>
 		<result property="codeOrder" column="codeOrder"/>
 		<result property="subCode" column="subCode"/>
 		<result property="subDesc" column="subDesc"/>
 		<result property="subRegDate" column="subRegDate"/>
 		<result property="subAblDate" column="subAblDate"/>
 		<result property="classId" column="classId"/>
 		<result property="openclassName" column="openclassName"/>
 		
 	</resultMap>

	<resultMap type="java.util.Map" id="HashMap">
		<result property="ordernum" column="ordernum"/>
		<result property="totalpayamt" column="totalpayamt"/>
		<result property="classprice" column="classprice"/>
		<result property="openclassid" column="openclassid"/>
		<result property="orderdate" column="orderdate"/>
		<result property="openclassname" column="openclassname"/>
	</resultMap>
<!-- select subCode -->
	<select id="selectSubCode" resultType="java.util.Map">
      <![CDATA[
		select codeName, codeId from code where codegroup='14' ORDER by codeorder
		      ]]>
	</select>


<!--select subject sequence -->
	<select id="selectSubSeq" resultType="java.util.Map">
      <![CDATA[
		select seq_subject.nextval subId from dual
      ]]>
	</select>


<!-- insert lecture -->
<insert id="lectureAdd" parameterType="F001LectureVO">
      <![CDATA[
		INSERT INTO SUBJECT(subId,subName,subDesc,subRegDate,subAblDate,subCode)
   		 VALUES(#{subId,jdbcType=VARCHAR},#{subName,jdbcType=VARCHAR},#{subDesc,jdbcType=VARCHAR},#{subRegDate,jdbcType=VARCHAR},#{subAblDate,jdbcType=VARCHAR},#{subCode,jdbcType=VARCHAR})
      ]]>
</insert>



<!-- select SubInfo -->
	<select id="selectSubInfo" resultType="java.util.Map">
      <![CDATA[
		SELECT 
		    subId,
		    subName,
		    subDesc,
		    subRegDate,
		    subAblDate,
		    subCode
		FROM SUBJECT
		order by subname
		      ]]>
	</select>




<!-- select LecturePlanInfo -->
	<select id="selectLecturePlanInfo" resultType="java.util.Map">
      <![CDATA[
		SELECT 
		       memNum
		FROM LECTUREPLAN
	    where planCode = #{subCode,jdbcType=VARCHAR}
		      ]]>
	</select>

<!-- 이름가져오기 -->
	<select id="selectMemName" resultType="String">
      <![CDATA[
		select 
			memname 
		from 
			member 
		where 
			memnum=#{memNum,jdbcType=VARCHAR}
		      ]]>
	</select>
<!-- 이름다시 가져오기 -->
	<select id="reGetTeaName" resultType="String">
      <![CDATA[
		select 
			memname 
		from 
			member 
		where 
			memnum=#{memNum,jdbcType=VARCHAR}
		      ]]>
	</select>
	
	
<!-- 강의정보 가져오기 -->
	<select id="lecturePlanInfoND" resultType="java.util.Map">
      <![CDATA[
		SELECT 
		    planLectureContent,
		    planId,
		    planName,
		    planCode,
		    memNum
		FROM LECTUREPLAN
	    where planCode = #{subCode,jdbcType=VARCHAR}
	    and memNum = #{memNum,jdbcType=VARCHAR}
		      ]]>
	</select>
	
	

<!-- 강의정보 가져오기 전체 -->
	<select id="selectLecPlanId" resultType="java.util.Map">
      <![CDATA[
		SELECT 
		   planStartDate,
		   planLectureContent,
		   planId,
	       planEndDate,
	       planStartTime,
	       planEndTime,
	       planName,
	       planDescFile,
	       planCapacity,
	       planCode,
	       planDescFile,
	       memNum
		FROM LECTUREPLAN
	    where planId = #{planId,jdbcType=VARCHAR}
		      ]]>
	</select>



<!-- 오픈클래스 등록 -->
	<insert id="insertOpenLec" >
      <![CDATA[
		INSERT INTO OPENCLASS
		(
			openStartDate,
			classDesc,
			classId,
			openclassId,
			classCapacity,
			memNum,
			classPrice,
			openclassName,
			subId,
			openEndDate,
			openStartTime,
			openEndTime
			)
    VALUES(
		    #{openStartDate,jdbcType=VARCHAR},
		    #{classDesc,jdbcType=VARCHAR},
		    #{classId,jdbcType=VARCHAR},
		    (seq_lecOpen.nextval),
		    #{classCapacity},
		    #{memNum,jdbcType=VARCHAR},
		    #{classPrice,jdbcType=VARCHAR},
		    #{openclassName,jdbcType=VARCHAR},
		    #{subId,jdbcType=VARCHAR},
		    #{openEndDate,jdbcType=VARCHAR},
		    #{openStartTime,jdbcType=VARCHAR},
		    #{openEndTime,jdbcType=VARCHAR}
		    )
		      ]]>
	</insert>


<select id="classIdLec" resultType="java.util.Map">
      <![CDATA[
		SELECT 
			a.bulid,
		    b.bulName,
		    a.classnumber,
		    a.classCapacity
		FROM CLASSROOM a , building b
		where classcode = '강의실'
		and a.bulid=b.bulid
		order by b.bulName
		      ]]>
	</select>

<select id="bulCodeLec" resultType="java.util.Map">
      <![CDATA[
		SELECT 
			a.bulid,
		    b.bulName,
		    a.classnumber,
		    a.classCapacity,
		    a.classId
		FROM CLASSROOM a , building b
		where classcode = '강의실'
		and a.bulid=#{bulId}
		and a.bulid=b.bulid
		order by b.bulName
		      ]]>
	</select>
<!-- 강사이름으로 검색 -->
<select id="selectTeaName" resultType="java.util.Map">
      <![CDATA[
	select
		 a.memnum,a.memname 
    from
		(
	select 
	memnum, memname from member where authid='1002' and memname like '%'||#{memName,jdbcType=VARCHAR}||'%'
		)
		a,
		(
	select 
		* 
	from 
		LECTUREPLAN
	where 
		plancode=#{subCode,jdbcType=VARCHAR}
		) b 
	where 
	a.memnum=b.memnum
		      ]]>
	</select>

<!-- 수강신청 관련 조회 -->
<select id="enrolmentInfo" resultType="java.util.Map">
      <![CDATA[
		SELECT 
		   a.openStartDate,
		   a.classDesc,
		   a.classId,
		   a.openclassId,
		   a.classCapacity,
		   a.classDescFile,
		   a.memNum,
		   a.classPrice,
		   a.openclassName,
		   a.subId,
		   a.openEndDate,
		   a.openStartTime,
		   a.openEndTime,
		   a.classSun,
		   a.classMon,
		   a.classTue,
		   a.classWed,
		   a.classThur,
		   a.classFri,
		   a.classSat,
		   b.memname
		FROM OPENCLASS a, member b
		where a.memnum=b.memnum

	      ]]>
	</select>



<select id="partnerOrderId" resultType="java.util.Map">
      <![CDATA[
			select seq_enrolment.nextval enrId from dual
      ]]>
	</select>
	
<!-- 	수강신청 -->
	
	<insert id="insertEnrolLec" parameterType="java.util.HashMap">
  	  <foreach collection="wholeEnrol" item="item" separator=" " open="INSERT ALL" close="SELECT * FROM DUAL">
		
  	   		INTO 
    		ENROLMENT
	    		(
		    		finalScore,
		    		finalGrade,
		    		studyApplyCode,
		    		enrId,
		    		studyteamId,
		    		openclassId,
		    		memNum,
		    		classApplyCode,
		    		enrDate,
		    		openclassName
	    		)
  			VALUES
  				(0,'','1700',#{item.cId}||#{memNum},'',#{item.cId},#{memNum},'1602',TO_CHAR(SYSDATE, 'yyyy-mm-dd'),#{item.cName})
  			  </foreach>
	</insert>
	
 
<!--  수강신청 시  검색에서 과목선택 -->
 <select id="searchClassIdName" resultType="java.util.Map">
      <![CDATA[
			SELECT 
			      codeName,
			      codeId
			FROM CODE
			WHERE codeGroup='14'

      ]]>
	</select>
 
 <select id="searchClassTea" resultType="java.util.Map">
      <![CDATA[
		 SELECT 
		    a.memNum,
		    b.memName
		FROM OPENCLASS a, MEMBER b
		where a.memNum = b.memNum
    ]]>
	</select>
	
<!--  보류과목삭제 -->
 <select id="holdDel" resultType="java.util.Map">
      <![CDATA[
			delete from enrolment where CLASSAPPLYCODE='1602' and memNum=#{memNum}
      ]]>
	</select>
	
	
<!--  듣고있는 과목 id 검색 -->
 <select id="delRegL"  resultType="java.util.Map">
      <![CDATA[
			select openclassid from enrolment where memnum=#{memNum} and classapplycode='1600'
      ]]>
	</select>
	
	
<select id="getSubIdJspC"  resultType="java.util.Map">
      <![CDATA[
		 SELECT 
			    a.memNum,
			    b.memName
		FROM OPENCLASS a, MEMBER b
		where a.memNum = b.memNum and a.subid=#{subId}
	   ]]>
	</select>
	
	
<!-- 장바구니 -->
<insert id="insertCart" parameterType="java.util.HashMap">
		insert
  	   		INTO 
    		cart
	    		(
			    	cartNum,
				    openclassId,
				    classPrice,
				    buyer
				)
  			VALUES
  				(#{cartOrderId},#{cId},#{cPrice},#{memNum})
</insert>
<!-- <update id="insertCart" parameterType="java.util.HashMap"> -->
<!-- 		  merge into cart m -->
<!-- 		  using ( select #{cartOrderId} as cartNum, #{cId} as openclassId, #{cPrice} as classPrice, #{memNum} as buyer -->
<!-- 		          from dual ) e -->
<!-- 		  on (m.openclassId = e.openclassId and m.buyer=e.buyer )          -->
<!-- 		  when matched then  -->
<!-- 			    update set cartNum = e.cartNum, openclassId = e.openclassId, classPrice = e.classPrice, buyer = e.buyer -->
<!-- 		  when not matched then -->
<!-- 		  		 insert (openclassId, cartNum, classPrice,buyer) -->
<!--    		  values (e.openclassId, e.cartNum, e.classPrice, e.buyer)  -->
<!-- </update> -->
	
	<update id="paidlist" parameterType="String">
	<![CDATA[
		update enrolment 
			set 
			classapplycode='1600' 
		where enrid=#{enrId}
     ]]>
	</update>	
	
	
	<!-- 장바구니 -->
<insert id="savePaidlist" parameterType="java.util.HashMap">
	INSERT INTO 
	PAYINFO
		(
			orderNum,
			totalPayAmt,
			buyer,
			orderDate,
			orderCode
		)
	    VALUES(#{orderId},#{amountTotal},#{memNum},#{approveTime},#{orderId})
</insert>

<select id="searchSub"  resultType="String">
      <![CDATA[
		 select classprice from openclass where openclassid=#{tempId}
	   ]]>
</select>


<insert id="insertOrderList" parameterType="java.util.HashMap">
	INSERT 
	INTO 
	ORDERLIST
	(
		orderNum,
		openclassId,
		classPrice
	)
    VALUES(#{orderId},#{tempId},#{classPrice})
</insert>

<!-- 결제목록 -->
<select id="selectPaidListR"  resultType="java.util.Map">
      <![CDATA[
		select
			 bb.ordernum, bb.totalpayamt, 
			 bb.classprice, bb.openclassid, bb.orderdate,
			 aa.openclassname  FROM openclass aa,
			(SELECT a.ordernum, a.totalpayamt, b.classprice, b.openclassid, a.orderdate  
		FROM 
			payinfo a, orderlist b where a.orderNum= b.ordernum and a.buyer=#{memNum}) bb 
	 	where 
	 		aa.openclassid=bb.openclassid
	 	order by bb.ordernum desc
	   ]]>
</select>

<!-- 장바구니 -->
<select id="cartInfo"  resultType="java.util.Map">
      <![CDATA[	
		select 
			bb.classnumber,aa.CLASSCAPACITY, aa.CLASSDESC, aa.SUBID, aa.MEMNUM, aa.OPENENDDATE, aa.CLASSTUE, aa.OPENCLASSDAYS, aa.OPENCLASSID, aa.OPENSTARTDATE,
			aa.CARTNUM, aa.OPENSTARTTIME, aa.BUYER, aa.CLASSPRICE, aa.CLASSTHUR, aa.OPENCLASSNAME, aa.CLASSID, aa.OPENENDTIME
		from  (select
					a.CLASSCAPACITY, a.CLASSDESC, a.SUBID, a.MEMNUM, a.OPENENDDATE, a.CLASSTUE, a.OPENCLASSDAYS, a.OPENCLASSID, a.OPENSTARTDATE,
					b.CARTNUM, a.OPENSTARTTIME, b.BUYER, a.CLASSPRICE, a.CLASSTHUR, a.OPENCLASSNAME, a.CLASSID, a.OPENENDTIME
			   from openclass a, cart b where a.openclassId=b.openclassid and b.buyer=#{memNum}) aa, 
			  (select 
			  		classnumber, classId 
			   from classroom)bb 
        where aa.classid=bb.classid
	   ]]>
</select>	
	
</mapper>